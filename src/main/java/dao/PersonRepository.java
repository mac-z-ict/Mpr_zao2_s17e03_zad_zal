package dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

import dao.mappers.IMapResultSetToEntity;
import dao.uow.IUnitOfWork;
import domain.Entity;
import domain.Person;

public class PersonRepository extends RepositoryBase<Person> 
	implements IPersonRepository{

	//repozytorium dla PERSON
	
	
	public PersonRepository(Connection connection, 
			IMapResultSetToEntity<Person> mapper,
			IUnitOfWork uow) {
		super(connection,mapper, uow);
	}
	//wywolanie updatu w tabeli
	public void setUpdateQuery(Person p) throws SQLException {
		update.setString(1, p.getName());
		update.setString(2, p.getSurname());
		update.setInt(3, p.getAge());
		update.setInt(4, p.getId());
	}
	//wywolanie inserta
	public void setInsertQuery(Person p) throws SQLException {
		insert.setString(1, p.getName());
		insert.setString(2, p.getSurname());
		insert.setInt(3, p.getAge());
	}

	@Override
	protected String tableName() {
		return "person";
	}
	//zapytanie -tworzenie tabeli
	protected String createTableSql() {
		return "CREATE TABLE person("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "name VARCHAR(20)," + "surname VARCHAR(50)," + "age int"
				+ ")";
	}
	//nowy wiersz w tabeli 
	protected String insertSql() {
		return "INSERT INTO person(name, surname, age) VALUES (?,?,?)";
	}
	//update w tabeli
	protected String updateSql() {
		return "UPDATE person SET name = ?, surname = ?, age = ? WHERE id = ?";
	}
	//select wg szukanego wzoru
	public List<Person> withName(String name) {
		//@formatter:off
		return getAll()
				.stream()
				.filter(p -> name.equals(p.getName()))
				.collect(Collectors
						.toCollection(ArrayList::new));
		//@formatter:on
	}

}
